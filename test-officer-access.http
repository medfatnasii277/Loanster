### Test OFFICER Role Access to Borrower Endpoints
# This should FAIL with 401 Unauthorized since only BORROWER role is allowed

### 1. Register OFFICER user
POST http://localhost:4000/auth/register
Content-Type: application/json

{
  "email": "officer@test.com",
  "password": "password123",
  "role": "OFFICER",
  "fullName": "Test Officer",
  "dateOfBirth": "1985-06-15"
}

###

### 2. Login as OFFICER to get token
POST http://localhost:4000/auth/login
Content-Type: application/json

{
  "email": "officer@test.com",
  "password": "password123"
}

> {%
  client.global.set("officer_token", response.body.token);
  client.log("Officer token stored: " + response.body.token);
%}

###

### 3. Test direct auth validation (should work - validates token but not role)
GET http://localhost:4005/validate
Authorization: Bearer {{officer_token}}

###

### 4. Test BORROWER role validation (should FAIL with 401)
GET http://localhost:4005/validate/borrower
Authorization: Bearer {{officer_token}}

###

### 5. Try to access borrower endpoints (should FAIL with 401)
GET http://localhost:4000/api/borrowers
Authorization: Bearer {{officer_token}}

###

### 6. Try to create borrower (should FAIL with 401)
POST http://localhost:4000/api/borrowers
Content-Type: application/json
Authorization: Bearer {{officer_token}}

{
  "firstName": "Test",
  "lastName": "User",
  "email": "test@example.com",
  "phoneNumber": "+1111111111",
  "dateOfBirth": "1990-01-01",
  "ssn": "111-11-1111",
  "address": "123 Test St",
  "city": "Test City",
  "state": "TX",
  "zipCode": "12345",
  "annualIncome": 50000.0,
  "employmentStatus": "EMPLOYED",
  "employerName": "Test Corp",
  "employmentYears": 3
}

###

### 7. For comparison - Login as BORROWER (should work)
POST http://localhost:4000/auth/login
Content-Type: application/json

{
  "email": "debug-user@test.com",
  "password": "password123"
}

> {%
  client.global.set("borrower_token", response.body.token);
  client.log("Borrower token stored: " + response.body.token);
%}

###

### 8. Access borrowers with BORROWER token (should work)
GET http://localhost:4000/api/borrowers
Authorization: Bearer {{borrower_token}}

###
