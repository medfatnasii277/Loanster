# Server Configuration
server.port=4003
spring.application.name=loan-score-service


spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Kafka Configuration
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
spring.kafka.consumer.group-id=loan-score-service
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer

# Kafka Topics
kafka.topics.borrower-created=borrower-created
kafka.topics.loan-application=loan-application
kafka.topics.documents-upload=documents-upload

# OpenAPI Documentation
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method

# Logging Configuration
logging.level.com.pm.loanscoreservice=INFO
logging.level.org.springframework.kafka=WARN
logging.level.org.apache.kafka=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# Score Calculation Weights Configuration
loan.scoring.weights.employment.unemployed=-50
loan.scoring.weights.employment.employed=100
loan.scoring.weights.employment.self-employed=75
loan.scoring.weights.employment.student=25
loan.scoring.weights.employment.retired=50

loan.scoring.weights.income.multiplier=0.001
loan.scoring.weights.loan-amount.ratio=-0.5
loan.scoring.weights.interest-rate.penalty=-10
loan.scoring.weights.employment-years.bonus=5
loan.scoring.weights.loan-term.penalty=-2

# Score Thresholds
loan.scoring.thresholds.excellent=750
loan.scoring.thresholds.good=650
loan.scoring.thresholds.fair=550
loan.scoring.thresholds.poor=400