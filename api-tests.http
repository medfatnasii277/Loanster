### =============================================================================
### LoanApp - Comprehensive API Testing Suite
### =============================================================================
### This file contains all API tests for the complete LoanApp system
### Services: Auth Service, Borrower Service, Officer Service, API Gateway
### =============================================================================

### =============================================================================
### 1. AUTHENTICATION SERVICE TESTS (Port 4005)
### =============================================================================

### Register new user (BORROWER)
POST http://localhost:4005/api/auth/register
Content-Type: application/json

{
  "username": "john.doe",
  "email": "john.doe@example.com",
  "password": "SecurePassword123!",
  "role": "BORROWER"
}

### Register new user (OFFICER)
POST http://localhost:4000/api/auth/register
Content-Type: application/json

{
  "username": "officer.smith",
  "email": "officer.smith@company.com",
  "password": "OfficerPass123!",
  "role": "OFFICER"
}

### Login as borrower
POST http://localhost:4005/api/auth/login
Content-Type: application/json

{
  "username": "john.doe",
  "password": "SecurePassword123!"
}

### Login as officer
POST http://localhost:4005/api/auth/login
Content-Type: application/json

{
  "username": "officer.smith",
  "password": "OfficerPass123!"
}

### Validate borrower token
POST http://localhost:4005/api/auth/validate/borrower
Authorization: Bearer YOUR_BORROWER_TOKEN_HERE

### Validate officer token
POST http://localhost:4005/api/auth/validate/officer
Authorization: Bearer YOUR_OFFICER_TOKEN_HERE

### =============================================================================
### 2. BORROWER SERVICE TESTS (Port 4001)
### =============================================================================

### Create borrower profile
POST http://localhost:4001/api/borrowers
Content-Type: application/json
Authorization: Bearer YOUR_BORROWER_TOKEN_HERE

{
  "firstName": "John",
  "lastName": "Doe",
  "email": "john.doe@example.com",
  "phoneNumber": "+1234567890",
  "dateOfBirth": "1990-01-15",
  "ssn": "123-45-6789",
  "address": {
    "street": "123 Main Street",
    "city": "New York",
    "state": "NY",
    "zipCode": "10001"
  },
  "employmentDetails": {
    "employer": "Tech Corp",
    "position": "Software Engineer",
    "annualIncome": 75000,
    "employmentStartDate": "2020-01-01"
  }
}

### Get borrower profile
GET http://localhost:4001/api/borrowers/1
Authorization: Bearer YOUR_BORROWER_TOKEN_HERE

### Update borrower profile
PUT http://localhost:4001/api/borrowers/1
Content-Type: application/json
Authorization: Bearer YOUR_BORROWER_TOKEN_HERE

{
  "firstName": "John",
  "lastName": "Doe",
  "email": "john.doe@updated.com",
  "phoneNumber": "+1234567890",
  "dateOfBirth": "1990-01-15",
  "ssn": "123-45-6789",
  "address": {
    "street": "456 Oak Avenue",
    "city": "Boston",
    "state": "MA",
    "zipCode": "02101"
  },
  "employmentDetails": {
    "employer": "New Tech Corp",
    "position": "Senior Software Engineer",
    "annualIncome": 85000,
    "employmentStartDate": "2020-01-01"
  }
}

### Submit loan application
POST http://localhost:4001/api/borrowers/1/loan-applications
Content-Type: application/json
Authorization: Bearer YOUR_BORROWER_TOKEN_HERE

{
  "loanType": "PERSONAL",
  "loanAmount": 25000,
  "loanTermMonths": 36,
  "interestRate": 6.5,
  "purpose": "Home improvement"
}

### Get loan applications for borrower
GET http://localhost:4001/api/borrowers/1/loan-applications
Authorization: Bearer YOUR_BORROWER_TOKEN_HERE

### Get specific loan application
GET http://localhost:4001/api/borrowers/1/loan-applications/1
Authorization: Bearer YOUR_BORROWER_TOKEN_HERE

### Upload document
POST http://localhost:4001/api/borrowers/1/documents
Content-Type: multipart/form-data
Authorization: Bearer YOUR_BORROWER_TOKEN_HERE

# Use form data with these fields:
# file: [select a file]
# documentName: ID Proof
# documentType: ID_PROOF
# description: Driver's License

### Get documents for borrower
GET http://localhost:4001/api/borrowers/1/documents
Authorization: Bearer YOUR_BORROWER_TOKEN_HERE

### Get specific document
GET http://localhost:4001/api/borrowers/1/documents/1
Authorization: Bearer YOUR_BORROWER_TOKEN_HERE

### Calculate loan payment
POST http://localhost:4001/api/borrowers/calculate-loan
Content-Type: application/json
Authorization: Bearer YOUR_BORROWER_TOKEN_HERE

{
  "loanAmount": 25000,
  "interestRate": 6.5,
  "loanTermMonths": 36
}

### =============================================================================
### 3. OFFICER SERVICE TESTS (Port 8083)
### =============================================================================

### Get all loan applications (Officer view)
GET http://localhost:8083/api/admin/loans
Authorization: Bearer YOUR_OFFICER_TOKEN_HERE

### Get specific loan application (Officer view)
GET http://localhost:8083/api/admin/loans/1
Authorization: Bearer YOUR_OFFICER_TOKEN_HERE

### Get loan applications by status
GET http://localhost:8083/api/admin/loans/status/PENDING
Authorization: Bearer YOUR_OFFICER_TOKEN_HERE

### Update loan application status (UNDER_REVIEW)
PUT http://localhost:8083/api/admin/loans/1/status
Content-Type: application/json
Authorization: Bearer YOUR_OFFICER_TOKEN_HERE

{
  "newStatus": "UNDER_REVIEW",
  "updatedBy": "officer.smith"
}

### Update loan application status (APPROVED)
PUT http://localhost:8083/api/admin/loans/1/status
Content-Type: application/json
Authorization: Bearer YOUR_OFFICER_TOKEN_HERE

{
  "newStatus": "APPROVED",
  "updatedBy": "officer.smith"
}

### Update loan application status (REJECTED with reason)
PUT http://localhost:8083/api/admin/loans/1/status
Content-Type: application/json
Authorization: Bearer YOUR_OFFICER_TOKEN_HERE

{
  "newStatus": "REJECTED",
  "rejectionReason": "Insufficient credit score",
  "updatedBy": "officer.smith"
}

### Get all documents (Officer view)
GET http://localhost:8083/api/admin/documents
Authorization: Bearer YOUR_OFFICER_TOKEN_HERE

### Get specific document (Officer view)
GET http://localhost:8083/api/admin/documents/1
Authorization: Bearer YOUR_OFFICER_TOKEN_HERE

### Get documents by status
GET http://localhost:8083/api/admin/documents/status/PENDING
Authorization: Bearer YOUR_OFFICER_TOKEN_HERE

### Get documents for specific loan application
GET http://localhost:8083/api/admin/loans/1/documents
Authorization: Bearer YOUR_OFFICER_TOKEN_HERE

### Update document status (UNDER_REVIEW)
PUT http://localhost:8083/api/admin/documents/1/status
Content-Type: application/json
Authorization: Bearer YOUR_OFFICER_TOKEN_HERE

{
  "newStatus": "UNDER_REVIEW",
  "updatedBy": "officer.smith"
}

### Update document status (APPROVED)
PUT http://localhost:8083/api/admin/documents/1/status
Content-Type: application/json
Authorization: Bearer YOUR_OFFICER_TOKEN_HERE

{
  "newStatus": "APPROVED",
  "updatedBy": "officer.smith"
}

### Update document status (REJECTED with reason)
PUT http://localhost:8083/api/admin/documents/1/status
Content-Type: application/json
Authorization: Bearer YOUR_OFFICER_TOKEN_HERE

{
  "newStatus": "REJECTED",
  "rejectionReason": "Document quality is poor, please resubmit",
  "updatedBy": "officer.smith"
}

### Get available loan statuses
GET http://localhost:8083/api/admin/status/loan-statuses
Authorization: Bearer YOUR_OFFICER_TOKEN_HERE

### Get available document statuses
GET http://localhost:8083/api/admin/status/document-statuses
Authorization: Bearer YOUR_OFFICER_TOKEN_HERE

### =============================================================================
### 3B. ADMIN ENDPOINTS VIA API GATEWAY (Port 4000) - OFFICER ROLE REQUIRED
### =============================================================================

### Get all loan applications via API Gateway
GET http://localhost:4000/api/admin/loans
Authorization: Bearer YOUR_OFFICER_TOKEN_HERE

### Get specific loan application via API Gateway
GET http://localhost:4000/api/admin/loans/1
Authorization: Bearer YOUR_OFFICER_TOKEN_HERE

### Get loan applications by status via API Gateway
GET http://localhost:4000/api/admin/loans/status/PENDING
Authorization: Bearer YOUR_OFFICER_TOKEN_HERE

### Update loan application status via API Gateway (UNDER_REVIEW)
PUT http://localhost:4000/api/admin/loans/1/status
Content-Type: application/json
Authorization: Bearer YOUR_OFFICER_TOKEN_HERE

{
  "newStatus": "UNDER_REVIEW",
  "updatedBy": "officer.smith"
}

### Update loan application status via API Gateway (APPROVED)
PUT http://localhost:4000/api/admin/loans/1/status
Content-Type: application/json
Authorization: Bearer YOUR_OFFICER_TOKEN_HERE

{
  "newStatus": "APPROVED",
  "updatedBy": "officer.smith"
}

### Update loan application status via API Gateway (REJECTED)
PUT http://localhost:4000/api/admin/loans/1/status
Content-Type: application/json
Authorization: Bearer YOUR_OFFICER_TOKEN_HERE

{
  "newStatus": "REJECTED",
  "rejectionReason": "Insufficient credit score",
  "updatedBy": "officer.smith"
}

### Get all documents via API Gateway
GET http://localhost:4000/api/admin/documents
Authorization: Bearer YOUR_OFFICER_TOKEN_HERE

### Get specific document via API Gateway
GET http://localhost:4000/api/admin/documents/1
Authorization: Bearer YOUR_OFFICER_TOKEN_HERE

### Get documents by status via API Gateway
GET http://localhost:4000/api/admin/documents/status/PENDING
Authorization: Bearer YOUR_OFFICER_TOKEN_HERE

### Get documents for specific loan application via API Gateway
GET http://localhost:4000/api/admin/loans/1/documents
Authorization: Bearer YOUR_OFFICER_TOKEN_HERE

### Update document status via API Gateway (UNDER_REVIEW)
PUT http://localhost:4000/api/admin/documents/1/status
Content-Type: application/json
Authorization: Bearer YOUR_OFFICER_TOKEN_HERE

{
  "newStatus": "UNDER_REVIEW",
  "updatedBy": "officer.smith"
}

### Update document status via API Gateway (APPROVED)
PUT http://localhost:4000/api/admin/documents/1/status
Content-Type: application/json
Authorization: Bearer YOUR_OFFICER_TOKEN_HERE

{
  "newStatus": "APPROVED",
  "updatedBy": "officer.smith"
}

### Update document status via API Gateway (REJECTED)
PUT http://localhost:4000/api/admin/documents/1/status
Content-Type: application/json
Authorization: Bearer YOUR_OFFICER_TOKEN_HERE

{
  "newStatus": "REJECTED",
  "rejectionReason": "Document unclear",
  "updatedBy": "officer.smith"
}

### Get all loan statuses via API Gateway
GET http://localhost:4000/api/admin/status/loan-statuses
Authorization: Bearer YOUR_OFFICER_TOKEN_HERE

### Get all document statuses via API Gateway
GET http://localhost:4000/api/admin/status/document-statuses
Authorization: Bearer YOUR_OFFICER_TOKEN_HERE

### Test unauthorized access (should fail with 403 Forbidden)
GET http://localhost:4000/api/admin/loans
Authorization: Bearer YOUR_BORROWER_TOKEN_HERE

### =============================================================================
### 4. API GATEWAY TESTS (Port 4000)
### =============================================================================

### Test API Gateway routing to borrower service
GET http://localhost:4000/api/borrowers/1
Authorization: Bearer YOUR_BORROWER_TOKEN_HERE

### Test API Gateway authentication (should fail without token)
GET http://localhost:4000/api/borrowers/1

### Test API Gateway with invalid token (should fail)
GET http://localhost:4000/api/borrowers/1
Authorization: Bearer invalid_token_here

### =============================================================================
### 5. KAFKA EVENT TESTING
### =============================================================================
### These tests verify that events flow correctly between services

### Step 1: Create test data in borrower service
### (Use the borrower creation and loan application requests above)

### Step 2: Update status in officer service
### (Use the loan/document status update requests above)

### Step 3: Verify status was updated in borrower service
### (Check the loan application status in borrower service)

### Expected behavior:
### 1. Officer updates loan status → Event published to Kafka
### 2. Borrower service consumes event → Updates local status
### 3. Only processes events for correct borrower (security)
### 4. Status is overwritten, not concatenated

### =============================================================================
### 6. HEALTH CHECKS AND MONITORING
### =============================================================================

### Check API Gateway health
GET http://localhost:4000/actuator/health

### Check Auth Service health
GET http://localhost:4005/actuator/health

### Check Borrower Service health
GET http://localhost:4001/actuator/health

### Check Officer Service health
GET http://localhost:8083/actuator/health

### Get Borrower Service metrics
GET http://localhost:4001/actuator/metrics

### Get Borrower Service Swagger UI
GET http://localhost:4001/swagger-ui.html

### Get Officer Service Swagger UI
GET http://localhost:8083/swagger-ui.html

### =============================================================================
### 7. ERROR TESTING
### =============================================================================

### Test validation errors (missing required fields)
POST http://localhost:4001/api/borrowers
Content-Type: application/json
Authorization: Bearer YOUR_BORROWER_TOKEN_HERE

{
  "firstName": "",
  "lastName": "",
  "email": "invalid-email"
}

### Test unauthorized access (wrong role)
GET http://localhost:8083/api/admin/loans
Authorization: Bearer YOUR_BORROWER_TOKEN_HERE

### Test not found errors
GET http://localhost:4001/api/borrowers/999
Authorization: Bearer YOUR_BORROWER_TOKEN_HERE

### Test invalid loan amount
POST http://localhost:4001/api/borrowers/1/loan-applications
Content-Type: application/json
Authorization: Bearer YOUR_BORROWER_TOKEN_HERE

{
  "loanType": "PERSONAL",
  "loanAmount": -1000,
  "loanTermMonths": 36,
  "interestRate": 6.5,
  "purpose": "Invalid loan"
}

### =============================================================================
### 8. PERFORMANCE TESTING EXAMPLES
### =============================================================================

### Concurrent loan applications (run multiple times simultaneously)
POST http://localhost:4001/api/borrowers/1/loan-applications
Content-Type: application/json
Authorization: Bearer YOUR_BORROWER_TOKEN_HERE

{
  "loanType": "PERSONAL",
  "loanAmount": 10000,
  "loanTermMonths": 24,
  "interestRate": 5.5,
  "purpose": "Performance test loan {{$randomInt}}"
}

### Bulk status updates (test Kafka throughput)
PUT http://localhost:8083/api/admin/loans/{{$randomInt}}/status
Content-Type: application/json
Authorization: Bearer YOUR_OFFICER_TOKEN_HERE

{
  "newStatus": "UNDER_REVIEW",
  "updatedBy": "performance.test.officer"
}

### =============================================================================
### NOTES:
### =============================================================================
### 1. Replace YOUR_BORROWER_TOKEN_HERE and YOUR_OFFICER_TOKEN_HERE with actual tokens
### 2. Update IDs (like borrower ID, loan ID) based on your test data
### 3. For file uploads, use your HTTP client's file upload feature
### 4. Monitor logs in all services to verify event processing
### 5. Use different borrower IDs to test multi-tenant functionality
### =============================================================================
