### Complete Kafka Event Testing Flow

### 1. Login to get token first
POST http://localhost:4000/auth/login
Content-Type: application/json

{
  "email": "debug-user@test.com",
  "password": "password123"
}

> {%
  client.global.set("token", response.body.token);
  client.log("Token stored: " + response.body.token);
%}

###

### 2. Test Borrower Created Event - Create a new borrower (should publish to borrower-created topic)
POST http://localhost:4000/api/borrowers
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "firstName": "John",
  "lastName": "Kafka",
  "email": "john.kafka@example.com",
  "phoneNumber": "+1234567890",
  "dateOfBirth": "1990-01-15",
  "ssn": "123-45-6789",
  "address": "123 Kafka Street",
  "city": "EventCity",
  "state": "KS",
  "zipCode": "12345",
  "annualIncome": 75000.0,
  "employmentStatus": "EMPLOYED",
  "employerName": "Kafka Corp",
  "employmentYears": 5
}

> {%
  client.global.set("borrowerId", response.body.id);
  client.log("Borrower ID stored: " + response.body.id);
%}

###

### 3. Test Loan Application Event - Apply for a loan (should publish to loan-application topic)
POST http://localhost:4000/api/borrowers/{{borrowerId}}/loans
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "loanAmount": 50000.0,
  "loanTermMonths": 60,
  "loanPurpose": "HOME_PURCHASE",
  "interestRate": 3.5
}

> {%
  client.global.set("loanApplicationId", response.body.id);
  client.log("Loan Application ID stored: " + response.body.id);
%}

###

### 4. Test Document Upload Event - Upload a document (should publish to documents-upload topic)
POST http://localhost:4000/api/borrowers/{{borrowerId}}/documents
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW
Authorization: Bearer {{token}}

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="file"; filename="test-document.pdf"
Content-Type: application/pdf

This is a test PDF content for Kafka event testing.
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="documentType"

INCOME_STATEMENT
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="description"

Test document for Kafka event verification
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="loanApplicationId"

{{loanApplicationId}}
------WebKitFormBoundary7MA4YWxkTrZu0gW--

###

### 5. Verify all data was created successfully
GET http://localhost:4000/api/borrowers/{{borrowerId}}
Authorization: Bearer {{token}}

###

### 6. Get loan applications for the borrower
GET http://localhost:4000/api/borrowers/{{borrowerId}}/loans
Authorization: Bearer {{token}}

###

### 7. Get documents for the borrower
GET http://localhost:4000/api/borrowers/{{borrowerId}}/documents
Authorization: Bearer {{token}}

###
